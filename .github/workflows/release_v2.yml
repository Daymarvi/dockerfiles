name: Release
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    tags:
      - '*'

  workflow_dispatch:

jobs:
  get-package:
    runs-on: ubuntu-latest
    name: "Get package list"
    outputs:
      packages: ${{ steps.list.outputs.packages }}
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2

      - id: list
        shell: pwsh
        run: |
          tree $pwd
          $packages = (Get-ChildItem -Directory -Exclude '.github').Name | Sort-Object
          $packages
          Write-Host "::set-output name=packages::$packages"

  build:
    needs: get-package
    name: "Build"
    runs-on: windows-2022
    strategy:
      matrix:
        package: ${{ needs.get-package.outputs.packages }}
        dockerfile: [dockerfile.nanoserver]
        os_type: [nanoserver]
        os_version: [1809, ltsc2022]
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2
    
      - 
        name: "Check dockerfile.nano existence"
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "${{ matrix.package }}/${{ matrix.dockerfile }}"
      # - 
      #   uses: mr-smithers-excellent/docker-build-push@v5
      #   name: Build & push Docker image
      #   if: steps.check_files.outputs.files_exists == 'true'
      #   with:
      #     image: $GITHUB_REPOSITORY_OWNER/${{ matrix.package }}
      #     buildArgs: OS_TYPE=${{ matrix.os_type }}, OS_VERSION=${{ matrix.os_version }}
      #     tags: ${{ matrix.os_type }}-${{ matrix.os_version }}
      #     registry: docker.io
      #     dockerfile: ${{ matrix.package }}/${{ matrix.dockerfile }}
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

