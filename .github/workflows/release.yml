name: Release
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    tags:
      - '*'

  workflow_dispatch:

jobs:
  build_2019:
    name: "[ Build ]"
    runs-on: windows-2019
    strategy:
      fail-fast: False
      matrix:
        application: ['prometheus','blackbox_exporter','alertmanager','grafana']
        os_version:  ['1809']
        os_type: ['nanoserver']
        include:
          - application: powercli
            os_version: ltsc2019
            os_type: windowsservercore
          - application: chocolatey
            os_version: ltsc2019
            os_type: windowsservercore
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: ${{ matrix.application }} ${{ matrix.os_type }} ${{ matrix.os_version }}
        shell: pwsh
        run: |
          cd $env:application
          $version = $(select-string -Path dockerfile.$($env:type)-$($env:os_version) -Pattern 'ENV (.+)_VERSION').ToString().split()[-1]
          docker build --build-arg ostype=$($env:type) --build-arg version=$($env:os_version) . -t jpatigny/$($env:application):$($version)-$($env:type)-$($env:os_version)
          docker push jpatigny/$($env:application):$($version)-$($env:type)-$($env:os_version)
        env:
          application: ${{ matrix.application }}
          type: ${{ matrix.os_type }}
          os_version: ${{ matrix.os_version }}

  build_2022:
    name: "[ Build ]"
    runs-on: windows-2022
    strategy:
      fail-fast: False
      matrix:
        application: ['prometheus','blackbox_exporter','alertmanager','grafana']
        os_version:  ['ltsc2022']
        os_type: ['nanoserver']
        include:
          - application: powercli
            os_version: ltsc2022
            os_type: windowsservercore
          - application: chocolatey
            os_version: ltsc2022
            os_type: windowsservercore
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: ${{ matrix.application }} ${{ matrix.os_type }} ${{ matrix.os_version }}
        shell: pwsh
        run: |
          cd $env:application
          $version = $(select-string -Path dockerfile.$($env:type)-$($env:os_version) -Pattern 'ENV (.+)_VERSION').ToString().split()[-1]
          docker build --build-arg ostype=$($env:type) --build-arg version=$($env:os_version) . -t jpatigny/$($env:application):$($version)-$($env:type)-$($env:os_version)
          docker push jpatigny/$($env:application):$($version)-$($env:type)-$($env:os_version)
        env:
          application: ${{ matrix.application }}
          type: ${{ matrix.os_type }}
          os_version: ${{ matrix.os_version }}

